#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<assert.h>

void* Memmove(void* dest, const void* src, size_t num) {
	assert(src != NULL);
	assert(num != 0);
	char* cdest = (char*)dest;
	const char* csrc = (const char*)src;
	if (cdest > csrc && cdest < csrc + num) {
		for (size_t i = num; i > 0; i--) {
			cdest[i - 1] = csrc[i - 1];
		}
	}
	else {
		for (size_t i = 0; i < num; i++) {
			cdest[i] = csrc[i];
		}
	}
	return dest;
}

int main() {
	int a1[] = { 3,2,1 };
	int a2[100] = { 0 };
	Memmove(a2, a1, sizeof(a1));
	for (int i = 0; i < 3; i++) {
		printf("%d ", a2[i]);
	}
	system("pause");
	return 0;
}

//typedef struct stu {
//	int id;
//	char name[100];
//}student;
//
//void* Memcpy(void* dest, const void* src, size_t num) {
//	assert(src != NULL);
//	assert(num != 0);
//	char* cdest = (char*)dest;
//	const char* csrc = (const char*)src;
//	for (size_t i = 0; i < num; i++) {
//		cdest[i] = csrc[i];
//	}
//	return dest;
//}
//
//int main() {
//	int a1[] = { 3,2,1 };
//	int a2[100] = { 0 };
//	Memcpy(a2, a1, sizeof(a1));
//	for (int i = 0; i < 3; i++) {
//		printf("%d ", a2[i]);
//	}
//	student s1 = { 1,"zwr" };
//	student s2;
//	Memcpy(&s2, &s1, sizeof(s1));
//	printf("\n%d,%s\n", s2.id, s2.name);
//
//	system("pause");
//	return 0;
//}

//char* Strstr(const char* str1, const char* str2) {
//	assert(str1 != NULL);
//	assert(str2 != NULL);
//	assert(*str1 != '\0');
//	assert(*str2 != '\0');
//	const char* blank = str1;
//	while (*blank != '\0') {
//		char* red = blank; //临时比较
//		char* sub = str2;
//		while (*sub != '\0' && *red != '\0' && *red == *sub) {
//			red++;
//			sub++;
//		}
//		if (*sub == '\0') {
//			return blank;
//		}
//		blank++;
//	}
//	return NULL;
//}
//
//int main() {
//	char* str1 = "hello TiMi!";
//	char* str2 = "TiMi";
//	const char* ret = Strstr(str1, str2);
//	printf("%s\n", ret);
//	system("pause");
//	return 0;
//}

//int Strncmp(const char* dest, const char* src, size_t num) {
//	assert(dest != NULL);
//	assert(src != NULL);
//	assert(num != 0);
//	size_t i = 0;
//	while (dest[i] != '\0' && src[i] != '\0' && i < num) {
//		if (dest[i] < src[i]) {
//			return -1;
//		}
//		else if (dest[i] > src[i]) {
//			return 1;
//		}
//		else {
//			i++;
//		}
//	}
//	return dest[i - 1] - src[i - 1];
//
//}
//
//int main() {
//	char src[] = "hehe";
//	char dest[] = "heha";
//	int ret = Strncmp(dest, src, 4); 
//	printf("%d\n", ret);
//
//	system("pause");
//	return 0;
//}

//char* Strncat(char* dest, const char* src, size_t num) {
//	assert(dest != NULL);
//	assert(src != NULL);
//	assert(num != 0);
//	size_t  destTail = 0;
//	while (dest[destTail] != '\0') {
//		destTail++;
//	}
//	int i = 0;
//	while (src[i] != '\0' && i < num) {
//		dest[destTail + i] = src[i];
//		i++;
//	}
//	dest[destTail + i] = '\0';
//	return dest;
//}
//
//int main() {
//	char src[] = "hehe";
//	char dest[1024] = "haha";
//	Strncat(dest, src, 2); //size_num<=sizeof(dest)-1;
//	printf("%s\n", dest);
//
//	system("pause");
//	return 0;
//}


//char* Strncpy(char* dest, const char* src, size_t num) {
//	assert(dest != NULL);
//	assert(src != NULL);
//	assert(num != NULL);
//	size_t i = 0;
//	while (src[i] != '\0' && i < num) {
//		dest[i] = src[i];
//		i++;
//	}
//	//dest[i] = '\0';
//	while (i <= num) {
//		dest[i] = '\0';
//		i++;
//	}
//	return dest;
//}
//
//int main() {
//	char src[] = "hehe";
//	char dest[1024] = { 0 };
//	Strncpy(dest, src, 3); //size_num<=sizeof(dest)-1;
//	printf("%s\n", dest);
//
//	system("pause");
//	return 0;
//}

//int Strcmp(const char* dest, const char* src) {
//	assert(dest!= NULL);
//	assert(src != NULL);
//	const char* p1 = dest;
//	const char* p2 = src;
//	while (*p1 != '\0' || *p2 != '\0') {
//		int diff = *p1 - *p2;
//		if (diff < 0 || diff>0) {
//			return diff;
//		}
//		else if (diff == 0) {
//			p1++;
//			p2++;
//		}
//	}
//	return 0;
//
//	//while (*p1 != '\0' && *p2 != '\0') {
//	//	if (*p1 < *p2) {
//	//		return -1;
//	//	}
//	//	else if (*p1 > *p2) {
//	//		return 1;
//	//	}
//	//	p1++;
//	//	p2++;
//	//}
//	//if (*p1 < *p2) {
//	//	return -1;
//	//}
//	//else if (*p1 > *p2) {
//	//	return 1;
//	//}
//	//else if(*p1==*p2){
//	//	return 0;
//	//}
//	//return *p1 - *p2;
//}
//
//int main() {
//	char src[] = "hiii";
//	char dest[] = "hiig";
//	int ret = Strcmp(dest, src);
//	printf("%d\n", ret);
//
//	system("pause");
//	return 0;
//}

//char* Strcat(char* dest, const char* src) {
//	assert(dest != NULL);
//	assert(src != NULL);
//	int destTail = 0;
//	while (dest[destTail] != '\0') {
//		destTail++;
//	}
//	//Strcpy(dest + destTail, src);
//	int i = 0;
//	while (src[i] != '\0'){
//		dest[i + destTail] = src[i];
//		i++;
//	}
//	dest[i + destTail] = '\0';
//	return dest;
//}
//
//int main() {
//	char src[] = "heihei";
//	char dest[1024] = "xixi";
//	Strcat(dest, src);
//	printf("%s\n", dest);
//
//	system("pause");
//	return 0;
//}

//typedef struct student {
//	int id;
//	char name[100];
//}stu;
//
//char* Strcpy(char* dest, const char* src) {
//	assert(dest != NULL);
//	assert(src != NULL);
//	int i = 0;
//	while (src[i] != '\0') {
//		dest[i] = src[i];
//		i++;
//	}
//	dest[i] = '\0';
//	return dest;
//}
//
//int main() {
//	char src[] = "hehe";
//	char dest[100] = { 0 };
//	Strcpy(dest,src);
//	printf("%s\n", dest);
//	stu s = { 1,"zwr" };
//	//s.name = "lisa";
//	strcpy(s.name, "lisa");
//	printf("%s\n", s.name);
//
//
//	system("pause");
//	return 0;
//}

//size_t strlen(const char* str) {
//	//校验参数的合法性 1.（不能校验野指针）
//	if (str == NULL) {
//		return 0;
//	}
//	//校验参数的合法性 2.(避免野指针）
//	assert(str != NULL);
//	size_t size = 0;
//	while (str[size] != '\0') {
//		size++;
//	}
//	return size;
//}
//
//int main() {
//	printf("字符串“abcd”的长度为：%d\n", strlen("abcd"));
//	char* p = "zxcv";
//	if (p != NULL) {
//		printf("p的长度为：%d\n", strlen(p));
//	}
//	system("pause");
//	return 0;
//}

//int maxNum(int a, int b) {
//	assert(a != 0);
//	assert(b != 0);
//	if (a == 0 || b == 0) {
//		return 0;
//	}
//	else {
//		int i = 1;
//		int max = 0;
//		for (; i <= (a < b ? a : b); i++) {
//			if (a % i == 0 && b % i == 0) {
//				max = i;
//			}
//		}
//		return max;
//	}
//}
//
//int main() {
//	int a = 1;
//	int b = 2;
//	int ret = maxNum(a, b);
//	printf("%d\n", ret);
//
//	system("pause");
//	return 0;
//}




















